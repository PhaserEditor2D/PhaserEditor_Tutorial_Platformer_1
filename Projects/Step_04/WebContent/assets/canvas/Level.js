
// -- user code here --

/* --- start generated code --- */

// Generated by Phaser Editor 1.4.3 (Phaser v2.6.2)


/**
 * Level.
 */
function Level() {
	
	Phaser.State.call(this);
	
}

/** @type Phaser.State */
var Level_proto = Object.create(Phaser.State.prototype);
Level.prototype = Level_proto;
Level.prototype.constructor = Level;

Level.prototype.init = function () {
	
	this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
	this.scale.pageAlignHorizontally = true;
	this.scale.pageAlignVertically = true;
	this.stage.backgroundColor = '#0080ff';
	
};

Level.prototype.preload = function () {
	
	this.load.pack('level', 'assets/pack.json');
	
};

Level.prototype.create = function () {
	
	this.initScene();
	
	this.add.sprite(-52, -108, 'BG');
	
	this.add.tileSprite(256, 279, 384, 93, 'tiles', '14');
	
	this.add.sprite(640, 279, 'tiles', '15');
	
	this.add.sprite(128, 279, 'tiles', '13');
	
	var _player = this.add.sprite(320, 71, 'player', 0);
	this.game.physics.arcade.enable(_player);
	_player.body.setSize(86.39996337890625, 85.96431732177734, 46.800018310546875, 109.2168960571289);
	
	var _collisionLayer = this.add.physicsGroup(Phaser.Physics.ARCADE);
	
	this.add.tileSprite(135, 283, 631, 30, 'tiles', 'physics', _collisionLayer);
	
	_collisionLayer.setAll("body.immovable", true);
	_collisionLayer.setAll("body.allowGravity", false);
	_collisionLayer.setAll("renderable", false);
	
	
	// public fields
	
	this.fPlayer = _player;
	this.fCollisionLayer = _collisionLayer;
	
};

/* --- end generated code --- */

Level.prototype.initScene = function () {
	// start the Arcade system
	this.game.physics.startSystem(Phaser.Physics.ARCADE);
	
	// set the global gravity
	this.game.physics.arcade.gravity.y = 800;
};

Level.prototype.update = function () {
	this.physics.arcade.collide(this.fPlayer, this.fCollisionLayer);
};

